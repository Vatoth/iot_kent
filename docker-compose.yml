version: "3"
services:
  mosquitto:
    image: eclipse-mosquitto:latest
    restart: always
    networks:
      - iot_internal
    ports:
      - 1883:1883
      - 9001:9001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mosquitto.rule=Host(`mosquitto.vatoth.dev`)"
      - "traefik.http.routers.mosquitto.entrypoints=https"
      - "traefik.http.routers.mosquitto.tls.certresolver=letsencrypt"
      - "traefik.http.services.mosquitto.loadbalancer.server.port=9001"
      - "traefik.docker.network=proxy"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - iot_internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.rule=Host(`influxdb.vatoth.dev`)"
      - "traefik.http.routers.influxdb.entrypoints=https"
      - "traefik.http.routers.influxdb.tls.certresolver=letsencrypt"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
      - "traefik.docker.network=proxy"
    volumes:
      - ./influxdb/data:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    networks:
      - iot_internal
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf
    
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: fatcloud-windrose-panel
    networks:
      - iot_internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.graphana.rule=Host(`grafana.vatoth.dev`)"
      - "traefik.http.routers.graphana.entrypoints=https"
      - "traefik.http.routers.graphana.tls.certresolver=letsencrypt"
      - "traefik.http.services.graphana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    ports:
      - 3000:3000
    volumes:
      - ./dist:/var/lib/grafana/plugins/clock-panel

networks:
  iot_internal:
  proxy:
    external: true

volumes:
  db_data: {}
